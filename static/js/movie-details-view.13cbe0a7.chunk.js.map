{"version":3,"file":"static/js/movie-details-view.13cbe0a7.chunk.js","mappings":"+PACA,EAAkC,0CAAlC,EAA8F,0CAA9F,EAAiJ,iCAAjJ,EAA8L,oC,SCUxLA,GAAOC,EAAAA,EAAAA,OAAK,kBAChB,+BAEIC,GAASD,EAAAA,EAAAA,OAAK,kBAClB,gCAKa,SAASE,IAAoB,IAAD,IACjCC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAUK,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAc1C,OAZAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEuBC,EAAAA,EAAAA,IAAkBb,GAFzC,OAESG,EAFT,OAGGC,EAASD,GAHZ,gDAKGI,EAAS,IAAK,CAAEO,SAAS,IACzBC,QAAQC,IAAR,MANH,yDAAD,yDASC,CAAChB,EAASO,IAGXJ,IACE,iCACE,SAAC,KAAD,CAAMc,GAAIR,EAAUS,UAAWC,EAA/B,6BAIA,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXC,IAhCS,kCAgCajB,EAAMkB,YAC5BC,IAAKnB,EAAMoB,WAGf,4BACE,wBAAKpB,EAAMoB,SACX,wCAAgBpB,EAAMqB,iBACtB,sCACA,uBAAIrB,EAAMsB,YACV,oCACA,uBAAItB,EAAMuB,OAAOC,KAAI,qBAAGC,QAAiBC,KAAK,eAGlD,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAOP,MAAOL,EAASK,MAAhC,qBAIF,yBACE,SAAC,KAAD,CAAMO,GAAG,UAAUP,MAAOL,EAASK,MAAnC,8BAMN,mBACA,SAAC,EAAAoB,SAAD,CAAUC,UAAU,6CAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACrC,EAAD,OAC5B,SAAC,KAAD,CAAOoC,KAAK,UAAUC,SAAS,SAACnC,EAAD,gB,oLCnFrCoC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,IAIxD,SAASrB,EAAkBb,GAChC,OAAOmC,EAAuB,sCAAD,OACWnC,EADX,oBAC8BkC,EAD9B,oBAKxB,SAASY,EAAkB9C,GAChC,OAAOmC,EAAuB,sCAAD,OACWnC,EADX,4BACsCkC,EADtC,oBAKxB,SAASa,EAAkB/C,GAChC,OAAOmC,EAAuB,sCAAD,OACWnC,EADX,4BACsCkC,EADtC,oBAKxB,SAASc,EAAiBC,GAC/B,OAAOd,EAAuB,yDAAD,OACuBD,EADvB,iCACuDe,EADvD","sources":["webpack://react-homework-template/./src/pages/MoviesDetailsView/MovieDetailsView.module.css?fd9c","pages/MoviesDetailsView/MoviesDetailsView.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_container\":\"MovieDetailsView_movie_container__46P73\",\"photo_container\":\"MovieDetailsView_photo_container__zP4OP\",\"poster\":\"MovieDetailsView_poster__4o6ze\",\"back_link\":\"MovieDetailsView_back_link__se7uO\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  useLocation,\n  Link,\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/API';\nimport s from './MovieDetailsView.module.css';\nconst Cast = lazy(() =>\n  import('../Cast/Cast' /* webpackChunkName: \"cast-view\" */)\n);\nconst Review = lazy(() =>\n  import('../Reviews/Reviews' /* webpackChunkName: \"review-view\" */)\n);\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport default function MovieDetailsView() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    (async function getMovie() {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovie(movie);\n      } catch (error) {\n        navigate('/', { replace: true });\n        console.log(error);\n      }\n    })();\n  }, [movieId, navigate]);\n\n  return (\n    movie && (\n      <>\n        <Link to={backLink} className={s.back_link}>\n          &#8592; Go back\n        </Link>\n\n        <div className={s.movie_container}>\n          <div className={s.photo_container}>\n            <img\n              className={s.poster}\n              src={BASE_IMAGE_URL + movie.poster_path}\n              alt={movie.title}\n            />\n          </div>\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User score: {movie.vote_average}</p>\n            <h4>Overview</h4>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{movie.genres.map(({ name }) => name).join(', ')}</p>\n          </div>\n        </div>\n        <hr />\n        <div>\n          <p>Additional information:</p>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={location.state}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <hr />\n        <Suspense fallback={<>loading...</>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Review />} />\n          </Routes>\n        </Suspense>\n      </>\n    )\n  );\n}\n","const API_KEY = '12e65dbf8f6231388c10338e98f45dbb';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(`\n  https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n"],"names":["Cast","lazy","Review","MovieDetailsView","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","backLink","state","from","useEffect","fetchMovieDetails","replace","console","log","to","className","s","src","poster_path","alt","title","vote_average","overview","genres","map","name","join","Suspense","fallback","path","element","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query"],"sourceRoot":""}