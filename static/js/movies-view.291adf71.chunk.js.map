{"version":3,"file":"static/js/movies-view.291adf71.chunk.js","mappings":"qMAGe,SAASA,EAAeC,GACrC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEF,IACE,wBACGA,EAAKA,KAAKG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,U,2HCLN,SAASK,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,UAEnCC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAtB,GACgB,IAAhBA,EAAKuB,OAITX,EAAUZ,GAHRiB,EAAgB,OAKnBO,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAC/B,CAACP,EAAWD,IAef,OACE,iCACE,kBAAMU,SAfW,SAAAC,GACnBA,EAAEC,iBACmB,KAAjBhB,EAAMiB,OAIVb,EAAgB,CAAEJ,MAAOA,EAAMiB,SAH7BJ,QAAQK,IAAI,mBAYZ,WACE,kBAAOC,KAAMnB,EAAOoB,SARA,SAAAL,GACxB,IAAMM,EAAON,EAAEO,cAAcC,MAAMC,cACnCvB,EAASoB,IAM4CI,KAAK,UACtD,kBAAOA,KAAK,SAASF,MAAM,cAE5BzB,IAAU,SAAC,IAAD,CAAgBX,KAAMW,EAAO4B,e,oLC5CxCC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,IAIxD,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,oBAC8Bb,EAD9B,oBAKxB,SAASc,EAAkBD,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASnB,EAAiBR,GAC/B,OAAO4B,EAAuB,yDAAD,OACuBD,EADvB,iCACuD3B,EADvD","sources":["components/MoviesLinkList/MoviesLinkList.jsx","pages/MoviesView/MoviesView.jsx","services/API.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesLinkList(data) {\n  const location = useLocation();\n  return (\n    data && (\n      <ul>\n        {data.data.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n}\n\nMoviesLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/API';\nimport MoviesLinkList from '../../components/MoviesLinkList/MoviesLinkList';\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const curentPos = searchParams.get('query');\n\n  useEffect(() => {\n    if (!curentPos) return;\n    fetchSearchMovie(curentPos)\n      .then(data => {\n        if (data.length === 0) {\n          setSearchParams({});\n          return;\n        }\n        setMovies(data);\n      })\n      .catch(error => console.error(error));\n  }, [curentPos, setSearchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      console.log('Enter the text');\n      return;\n    }\n    setSearchParams({ query: query.trim() });\n  };\n  const handelInputChange = e => {\n    const text = e.currentTarget.value.toLowerCase();\n    setQuery(text);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name={query} onChange={handelInputChange} type=\"text\"></input>\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      {movies && <MoviesLinkList data={movies.results} />}\n    </>\n  );\n}\n","const API_KEY = '12e65dbf8f6231388c10338e98f45dbb';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(`\n  https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n"],"names":["MoviesLinkList","data","location","useLocation","map","id","original_title","to","state","from","MoviesView","useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","curentPos","get","useEffect","fetchSearchMovie","then","length","catch","error","console","onSubmit","e","preventDefault","trim","log","name","onChange","text","currentTarget","value","toLowerCase","type","results","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}